name: Tag New Version

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  tag:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Ensure we're on the main branch
        run: git checkout main

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          tag=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "latest=$tag" >> $GITHUB_OUTPUT

      - name: Determine bump type from PR label
        id: bump
        run: |
          label=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels \
            | jq -r '.[].name' | grep '^release:' || true)

          echo "Label: $label"

          case "$label" in
            release:major) bump="major" ;;
            release:minor) bump="minor" ;;
            release:patch) bump="patch" ;;
            *) echo "No valid release label found"; exit 1 ;;
          esac

          echo "bump=$bump" >> $GITHUB_OUTPUT

      - name: Bump version and create tag
        id: bump_tag
        run: |
          old="${{ steps.get_tag.outputs.latest }}"
          bump="${{ steps.bump.outputs.bump }}"
          echo "Previous tag: $old"
          echo "Bump type: $bump"

          version="${old#v}"
          echo "Version without 'v': $version"

          IFS='.' read major minor patch <<< "$version"
          echo "Parsed: major=$major, minor=$minor, patch=$patch"

          if [ "$bump" = "major" ]; then
            major=$(expr "$major" + 1)
            minor=0
            patch=0
          elif [ "$bump" = "minor" ]; then
            minor=$(expr "$minor" + 1)
            patch=0
          elif [ "$bump" = "patch" ]; then
            patch=$(expr "$patch" + 1)
          else
            echo "Invalid bump type: $bump"
            exit 1
          fi

          new_tag="v${major}.${minor}.${patch}"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
          echo "Generated new tag: $new_tag"

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          if git tag | grep -q "^$new_tag$"; then
            echo "Tag $new_tag already exists"
          else
            git tag "$new_tag"
            git push https://x-access-token:${{ secrets.REPO_TOKEN }}@github.com/${{ github.repository }} "$new_tag"
          fi

      - name: Output new tag
        run: echo "Tagged ${{ steps.bump_tag.outputs.new_tag }}"

      - name: Trigger downstream workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_TOKEN }}
          event-type: run-tagged-workflow
